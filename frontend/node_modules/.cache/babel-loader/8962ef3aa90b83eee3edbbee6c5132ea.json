{"ast":null,"code":"import _slicedToArray from \"/Users/ryanbreaux/Test/videoup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryanbreaux/Test/videoup/src/upload.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Button } from \"rebass\";\nimport io from \"socket.io-client\";\n\nconst uploadEvent = data => {\n  const socket = io(\"http://localhost:5000\");\n\n  const loadFile = file => {\n    console.log(file);\n    const fReader = new FileReader();\n\n    fReader.onload = event => {\n      console.log(event.target.result);\n      socket.emit(\"Upload\", {\n        name: file.name,\n        data: event.target.result\n      });\n    };\n\n    fReader.readAsArrayBuffer(file);\n    socket.emit(\"Start\", {\n      name: file.name,\n      Size: file.size\n    });\n  };\n\n  for (let i = 0; i <= data.length; ++i) {\n    loadFile(data[i]);\n  }\n};\n\nconst Upload = params => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        fileData = _useState2[0],\n        setFile = _useState2[1];\n\n  useEffect(() => {}, []);\n  console.log(fileData);\n  return React.createElement(Flex, {\n    style: {\n      height: \"100vh\"\n    },\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"video/*\",\n    multiple: true,\n    onChange: e => setFile(e.target.files),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), fileData && React.createElement(Button, {\n    onClick: () => uploadEvent(fileData),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Upload \"));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/Users/ryanbreaux/Test/videoup/src/upload.js"],"names":["React","useState","useEffect","Flex","Button","io","uploadEvent","data","socket","loadFile","file","console","log","fReader","FileReader","onload","event","target","result","emit","name","readAsArrayBuffer","Size","size","i","length","Upload","params","fileData","setFile","height","e","files"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAC1B,QAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;;AACA,QAAMI,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,OAAO,GAAG,IAAIC,UAAJ,EAAhB;;AAEAD,IAAAA,OAAO,CAACE,MAAR,GAAiBC,KAAK,IAAI;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,MAAN,CAAaC,MAAzB;AACAV,MAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ,EAAsB;AAAEC,QAAAA,IAAI,EAAEV,IAAI,CAACU,IAAb;AAAmBb,QAAAA,IAAI,EAAES,KAAK,CAACC,MAAN,CAAaC;AAAtC,OAAtB;AACD,KAHD;;AAKAL,IAAAA,OAAO,CAACQ,iBAAR,CAA0BX,IAA1B;AACAF,IAAAA,MAAM,CAACW,IAAP,CAAY,OAAZ,EAAqB;AAAEC,MAAAA,IAAI,EAAEV,IAAI,CAACU,IAAb;AAAmBE,MAAAA,IAAI,EAAEZ,IAAI,CAACa;AAA9B,KAArB;AACD,GAXD;;AAaA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIjB,IAAI,CAACkB,MAA1B,EAAkC,EAAED,CAApC,EAAuC;AACrCf,IAAAA,QAAQ,CAACF,IAAI,CAACiB,CAAD,CAAL,CAAR;AACD;AACF,CAlBD;;AAoBA,MAAME,MAAM,GAAGC,MAAM,IAAI;AAAA,oBACK1B,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,QAChB2B,QADgB;AAAA,QACNC,OADM;;AAGvB3B,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,cAAc,EAAC,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEC,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACd,MAAF,CAASe,KAAV,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAWGJ,QAAQ,IACP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMtB,WAAW,CAACsB,QAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,CADF;AAiBD,CAtBD;;AAwBA,eAAeF,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Button } from \"rebass\";\nimport io from \"socket.io-client\";\n\nconst uploadEvent = data => {\n  const socket = io(\"http://localhost:5000\");\n  const loadFile = file => {\n    console.log(file);\n    const fReader = new FileReader();\n\n    fReader.onload = event => {\n      console.log(event.target.result);\n      socket.emit(\"Upload\", { name: file.name, data: event.target.result });\n    };\n\n    fReader.readAsArrayBuffer(file);\n    socket.emit(\"Start\", { name: file.name, Size: file.size });\n  };\n\n  for (let i = 0; i <= data.length; ++i) {\n    loadFile(data[i]);\n  }\n};\n\nconst Upload = params => {\n  const [fileData, setFile] = useState(null);\n\n  useEffect(() => {}, []);\n  console.log(fileData);\n  return (\n    <Flex\n      style={{ height: \"100vh\" }}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <input\n        type=\"file\"\n        accept=\"video/*\"\n        multiple\n        onChange={e => setFile(e.target.files)}\n      />\n      {fileData && (\n        <Button onClick={() => uploadEvent(fileData)}> Upload </Button>\n      )}\n    </Flex>\n  );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}