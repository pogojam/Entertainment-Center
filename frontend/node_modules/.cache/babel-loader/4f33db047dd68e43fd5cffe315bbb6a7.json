{"ast":null,"code":"import _slicedToArray from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/pages/music.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Player from \"../components/player/spotify\";\nimport io from \"socket.io-client\";\nimport ss from \"socket.io-stream\";\nconst socket = io(\"http://localhost:5000\");\nconst stream = ss.createStream();\nexport default function Music() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        player = _useState2[0],\n        togglePlayer = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        src = _useState4[0],\n        setSrc = _useState4[1]; // const audioContext = new AudioContext();\n\n\n  const parts = [];\n\n  const handleClick = e => {\n    ss(socket).emit(\"Play\", stream);\n    stream.on(\"data\", data => {\n      console.log(data);\n      parts.push(data);\n    });\n    stream.on(\"end\", () => {\n      setSrc(window.URL.createObjectURL(new Blob([new Uint8Array(parts).buffer])));\n      togglePlayer(true);\n    }); // const audioStream = new MediaStream();\n    // console.log(audioStream);\n    // const audio = audioContext.createMediaStreamSource(stream);\n    // audio.connect(audioContext.destination);\n    // audio.start();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, player && React.createElement(\"audio\", {\n    controls: true,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: src,\n    type: \"audio/mp3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sync Song\"), React.createElement(Player, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/pages/music.js"],"names":["React","useEffect","useState","Player","io","ss","socket","stream","createStream","Music","player","togglePlayer","src","setSrc","parts","handleClick","e","emit","on","data","console","log","push","window","URL","createObjectURL","Blob","Uint8Array","buffer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB;AACA,MAAMG,MAAM,GAAGF,EAAE,CAACG,YAAH,EAAf;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACCP,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,QACvBQ,MADuB;AAAA,QACfC,YADe;;AAAA,qBAERT,QAAQ,CAAC,KAAD,CAFA;AAAA;AAAA,QAEvBU,GAFuB;AAAA,QAElBC,MAFkB,kBAG9B;;;AACA,QAAMC,KAAK,GAAG,EAAd;;AAEA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvBX,IAAAA,EAAE,CAACC,MAAD,CAAF,CAAWW,IAAX,CAAgB,MAAhB,EAAwBV,MAAxB;AAEAA,IAAAA,MAAM,CAACW,EAAP,CAAU,MAAV,EAAkBC,IAAI,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,KAAK,CAACQ,IAAN,CAAWH,IAAX;AACD,KAHD;AAIAZ,IAAAA,MAAM,CAACW,EAAP,CAAU,KAAV,EAAiB,MAAM;AACrBL,MAAAA,MAAM,CACJU,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAAC,IAAIC,UAAJ,CAAeb,KAAf,EAAsBc,MAAvB,CAAT,CAA3B,CADI,CAAN;AAGAjB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KALD,EAPuB,CAcvB;AACA;AACA;AACA;AACA;AACD,GAnBD;;AAoBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,IACL;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,GAAG,EAAEE,GAAb;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAME;AAAQ,IAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Player from \"../components/player/spotify\";\nimport io from \"socket.io-client\";\nimport ss from \"socket.io-stream\";\n\nconst socket = io(\"http://localhost:5000\");\nconst stream = ss.createStream();\n\nexport default function Music() {\n  const [player, togglePlayer] = useState(false);\n  const [src, setSrc] = useState(false);\n  // const audioContext = new AudioContext();\n  const parts = [];\n\n  const handleClick = e => {\n    ss(socket).emit(\"Play\", stream);\n\n    stream.on(\"data\", data => {\n      console.log(data);\n      parts.push(data);\n    });\n    stream.on(\"end\", () => {\n      setSrc(\n        window.URL.createObjectURL(new Blob([new Uint8Array(parts).buffer]))\n      );\n      togglePlayer(true);\n    });\n\n    // const audioStream = new MediaStream();\n    // console.log(audioStream);\n    // const audio = audioContext.createMediaStreamSource(stream);\n    // audio.connect(audioContext.destination);\n    // audio.start();\n  };\n  return (\n    <div>\n      {player && (\n        <audio controls autoPlay>\n          <source src={src} type=\"audio/mp3\" />\n        </audio>\n      )}\n      <button onClick={handleClick}>Sync Song</button>\n      <Player />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}