{"ast":null,"code":"import _slicedToArray from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/components/nav/mainNav.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    top: 0;\\n    z-index: 999;\\n  \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  transition: 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\\n  &:hover {\\n    transform: scale(1.2);\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Flex, Image, Button } from \"rebass\";\nimport { useSpring, animated } from \"react-spring\";\nconst StyledButton = styled(Button)(_templateObject());\n\nconst NavButton = ({\n  name,\n  path\n}) => React.createElement(Link, {\n  to: path,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(StyledButton, {\n  bg: \"transparent\",\n  color: \"#22ce99\",\n  m: \"1em\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, name));\n\nconst Container = ({\n  children,\n  logo,\n  style\n}) => {\n  const Animated = styled(animated(Flex))(_templateObject2());\n  return React.createElement(Animated, {\n    style: style,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, logo && React.createElement(Image, {\n    width: \"55px\",\n    ml: \"1em\",\n    m: \"auto\",\n    src: logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), children);\n};\n\nconst buildButtons = (pages, handleClick) => pages.map((e, i) => React.createElement(NavButton, Object.assign({\n  key: e.name + i\n}, e, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})));\n\nconst Nav = ({\n  visible,\n  pages\n}) => {\n  const _useState = useState(visible),\n        _useState2 = _slicedToArray(_useState, 2),\n        isVisible = _useState2[0],\n        toggleVisible = _useState2[1];\n\n  const animation = useSpring({\n    transform: isVisible ? \"translateY(0%)\" : \"translateY(-100%)\"\n  });\n  return React.createElement(Container, {\n    style: animation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, buildButtons(pages));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/components/nav/mainNav.js"],"names":["React","useState","styled","Link","Flex","Image","Button","useSpring","animated","StyledButton","NavButton","name","path","Container","children","logo","style","Animated","buildButtons","pages","handleClick","map","e","i","Nav","visible","isVisible","toggleVisible","animation","transform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,QAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,MAAMC,YAAY,GAAGP,MAAM,CAACI,MAAD,CAAT,mBAAlB;;AAOA,MAAMI,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAChB,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,YAAD;AAAc,EAAA,EAAE,EAAC,aAAjB;AAA+B,EAAA,KAAK,EAAC,SAArC;AAA+C,EAAA,CAAC,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IADH,CADF,CADF;;AAQA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AAC/C,QAAMC,QAAQ,GAAGf,MAAM,CAACM,QAAQ,CAACJ,IAAD,CAAT,CAAT,oBAAd;AAKA,SACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEY,KADT;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,IAAI,IAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAC,KAAvB;AAA6B,IAAA,CAAC,EAAC,MAA/B;AAAsC,IAAA,GAAG,EAAEA,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANX,EAOGD,QAPH,CADF;AAWD,CAjBD;;AAmBA,MAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KACnBD,KAAK,CAACE,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU,oBAAC,SAAD;AAAW,EAAA,GAAG,EAAED,CAAC,CAACX,IAAF,GAASY;AAAzB,GAAgCD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB,CADF;;AAGA,MAAME,GAAG,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWN,EAAAA;AAAX,CAAD,KAAwB;AAAA,oBACClB,QAAQ,CAACwB,OAAD,CADT;AAAA;AAAA,QAC3BC,SAD2B;AAAA,QAChBC,aADgB;;AAGlC,QAAMC,SAAS,GAAGrB,SAAS,CAAC;AAC1BsB,IAAAA,SAAS,EAAEH,SAAS,GAAG,gBAAH,GAAsB;AADhB,GAAD,CAA3B;AAIA,SAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BV,YAAY,CAACC,KAAD,CAA1C,CAAP;AACD,CARD;;AAUA,eAAeK,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Flex, Image, Button } from \"rebass\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst StyledButton = styled(Button)`\n  transition: 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nconst NavButton = ({ name, path }) => (\n  <Link to={path}>\n    <StyledButton bg=\"transparent\" color=\"#22ce99\" m=\"1em\">\n      {name}\n    </StyledButton>\n  </Link>\n);\n\nconst Container = ({ children, logo, style }) => {\n  const Animated = styled(animated(Flex))`\n    top: 0;\n    z-index: 999;\n  `;\n\n  return (\n    <Animated\n      style={style}\n      width=\"100%\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {logo && <Image width=\"55px\" ml=\"1em\" m=\"auto\" src={logo} />}\n      {children}\n    </Animated>\n  );\n};\n\nconst buildButtons = (pages, handleClick) =>\n  pages.map((e, i) => <NavButton key={e.name + i} {...e} />);\n\nconst Nav = ({ visible, pages }) => {\n  const [isVisible, toggleVisible] = useState(visible);\n\n  const animation = useSpring({\n    transform: isVisible ? \"translateY(0%)\" : \"translateY(-100%)\"\n  });\n\n  return <Container style={animation}>{buildButtons(pages)}</Container>;\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}