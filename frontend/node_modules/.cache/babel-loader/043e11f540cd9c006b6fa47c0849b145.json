{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/components/upload.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    max-height: 100vh;\\n    max-width: 100vw;\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Button, Box } from \"rebass\";\nimport io from \"socket.io-client\";\nconst socket = io(\"http://localhost:5000\");\n\nconst uploadEvent = data => {\n  const loadFile = file => {\n    const fReader = new FileReader();\n\n    fReader.onload = event => {\n      console.log(event.target.result);\n      socket.emit(\"Upload\", {\n        name: file.name,\n        data: event.target.result\n      });\n    };\n\n    console.log(file);\n    fReader.readAsArrayBuffer(file);\n    socket.emit(\"Start\", {\n      name: file.name,\n      Size: file.size\n    });\n  };\n\n  for (let i = 0; i < data.length; ++i) {\n    loadFile(data[i]);\n  }\n};\n\nexport const Upload = ({\n  toggle\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        fileData = _useState2[0],\n        setFile = _useState2[1];\n\n  useEffect(() => {}, []);\n  console.log(fileData);\n  return React.createElement(Flex, {\n    style: {\n      height: \"100vh\",\n      position: \"absolute\",\n      top: \"0\"\n    },\n    bg: \"#a9a9a98a\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    onClick: e => toggle(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      borderRadius: \"6px\",\n      padding: \"8em\",\n      backgroundColor: \"whitesmoke\"\n    },\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"video/*\",\n    multiple: true,\n    onChange: e => setFile(e.target.files),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), fileData && React.createElement(Button, {\n    onClick: () => uploadEvent(fileData) & toggle(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Upload\")));\n};\nexport const VideoPlayer = () => {\n  const Video = styled.video(_templateObject());\n  return React.createElement(Video, {\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: \"http://localhost:5000/video\",\n    type: \"video/mp4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \";\");\n};","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/components/upload.js"],"names":["React","useState","useEffect","styled","Flex","Button","Box","io","socket","uploadEvent","data","loadFile","file","fReader","FileReader","onload","event","console","log","target","result","emit","name","readAsArrayBuffer","Size","size","i","length","Upload","toggle","fileData","setFile","height","position","top","e","borderRadius","padding","backgroundColor","stopPropagation","files","VideoPlayer","Video","video"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Button, Box } from \"rebass\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:5000\");\n\nconst uploadEvent = data => {\n  const loadFile = file => {\n    const fReader = new FileReader();\n\n    fReader.onload = event => {\n      console.log(event.target.result);\n      socket.emit(\"Upload\", { name: file.name, data: event.target.result });\n    };\n    console.log(file);\n    fReader.readAsArrayBuffer(file);\n    socket.emit(\"Start\", { name: file.name, Size: file.size });\n  };\n\n  for (let i = 0; i < data.length; ++i) {\n    loadFile(data[i]);\n  }\n};\n\nexport const Upload = ({ toggle }) => {\n  const [fileData, setFile] = useState(null);\n\n  useEffect(() => {}, []);\n  console.log(fileData);\n  return (\n    <Flex\n      style={{ height: \"100vh\", position: \"absolute\", top: \"0\" }}\n      bg=\"#a9a9a98a\"\n      width=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={e => toggle(false)}\n    >\n      <Box\n        style={{\n          borderRadius: \"6px\",\n          padding: \"8em\",\n          backgroundColor: \"whitesmoke\"\n        }}\n        onClick={e => e.stopPropagation()}\n      >\n        <input\n          type=\"file\"\n          accept=\"video/*\"\n          multiple\n          onChange={e => setFile(e.target.files)}\n        />\n        {fileData && (\n          <Button onClick={() => uploadEvent(fileData) & toggle(false)}>\n            Upload\n          </Button>\n        )}\n      </Box>\n    </Flex>\n  );\n};\n\nexport const VideoPlayer = () => {\n  const Video = styled.video`\n    position: absolute;\n    top: 0;\n    left: 0;\n    max-height: 100vh;\n    max-width: 100vw;\n  `;\n\n  return (\n    <Video controls>\n      <source src=\"http://localhost:5000/video\" type=\"video/mp4\" />;\n    </Video>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}