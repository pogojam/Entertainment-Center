{"ast":null,"code":"import _slicedToArray from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/pages/movies.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    getMovies {\\n      Title\\n      Rated\\n      Year\\n      Awards\\n      Plot\\n      Poster\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Upload, VideoPlayer } from \"../components/upload\";\nimport { Box, Button, Card, Heading, Text } from \"rebass\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport gql from \"graphql-tag\";\nimport { useSpring, animated } from \"react-spring\";\nimport ImageFilter from \"react-image-filter\";\nimport { inspect } from \"util\";\nconst queryMovies = gql(_templateObject()); // const queryCategories = gql`\n//   getCategories{\n//   }\n// `;\n\nconst MoviePreview = ({\n  playMovie,\n  data\n}) => {\n  const Year = data.Year,\n        Rated = data.Rated,\n        Genre = data.Genre,\n        Awards = data.Awards,\n        Poster = data.Poster,\n        Title = data.Title,\n        Plot = data.Plot;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        inspect = _useState2[0],\n        toggleInspect = _useState2[1];\n\n  const subTitle = [Year, Rated, Genre, Awards];\n\n  const handleClick = () => toggleInspect(!inspect);\n\n  const props = useSpring({\n    size: 1,\n    from: {\n      size: 3\n    }\n  });\n  const Background = animated(ImageFilter);\n  return React.createElement(Card, {\n    style: {\n      height: \"100%\",\n      color: \"white\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    maxWidth: \"20vw\",\n    onClick: handleClick,\n    className: \"animated fadeIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Background, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      height: \"100%\",\n      zIndex: \"-1\",\n      transform: \"scale(\".concat(props.size, \")\")\n    },\n    preserveAspectRatio: \"cover\",\n    image: Poster,\n    filter: \"duotone\",\n    colorOne: [0, 0, 0],\n    colorTwo: [255, 255, 255],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Heading, {\n    fontSize: [5],\n    py: \"3em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, Title), inspect && React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Text, {\n    backgroundColor: \"black\",\n    fontSize: [1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, Plot), subTitle.map((e, i) => React.createElement(Text, {\n    key: i,\n    fontSize: \".3em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, e))));\n};\n\nconst Slider = ({\n  togglePlayer,\n  categories\n}) => {\n  const handleClick = () => togglePlayer(true);\n\n  const _useQuery = useQuery(queryMovies),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data.getMovies;\n\n  !loading && console.log(data, error);\n  return React.createElement(Box, {\n    bg: \"#fd0101\",\n    my: \"5em\",\n    p: \".5em\",\n    style: {\n      height: \"40vh\"\n    },\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, categories), !loading && data.map(e => React.createElement(MoviePreview, {\n    key: e.Title,\n    data: e,\n    playMovie: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default function Movies() {\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        upload = _useState4[0],\n        toggleUpload = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        player = _useState6[0],\n        togglePlayer = _useState6[1]; // const {loading,error,data}  = useQuery(queryCategories)\n\n\n  const data = [{\n    categories: \"dfs\"\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, data.map(({\n    categories\n  }) => {\n    return React.createElement(Slider, {\n      key: categories,\n      togglePlayer: togglePlayer,\n      name: categories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    });\n  }), React.createElement(Button, {\n    bg: \"#000000\",\n    color: \"#22ce99\",\n    onClick: () => toggleUpload(!upload),\n    style: {\n      position: \"absolute\",\n      bottom: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" \", \"Contribute\"), player && React.createElement(VideoPlayer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), upload && React.createElement(Upload, {\n    toggle: toggleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Personal/homeApp/frontend/src/pages/movies.js"],"names":["React","useState","Upload","VideoPlayer","Box","Button","Card","Heading","Text","useQuery","useMutation","styled","gql","useSpring","animated","ImageFilter","inspect","queryMovies","MoviePreview","playMovie","data","Year","Rated","Genre","Awards","Poster","Title","Plot","toggleInspect","subTitle","handleClick","props","size","from","Background","height","color","position","overflow","top","left","zIndex","transform","map","e","i","Slider","togglePlayer","categories","loading","error","getMovies","console","log","Movies","upload","toggleUpload","player","bottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Upload, VideoPlayer } from \"../components/upload\";\nimport { Box, Button, Card, Heading, Text } from \"rebass\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport gql from \"graphql-tag\";\nimport { useSpring, animated } from \"react-spring\";\nimport ImageFilter from \"react-image-filter\";\nimport { inspect } from \"util\";\n\nconst queryMovies = gql`\n  {\n    getMovies {\n      Title\n      Rated\n      Year\n      Awards\n      Plot\n      Poster\n    }\n  }\n`;\n\n// const queryCategories = gql`\n//   getCategories{\n\n//   }\n// `;\n\nconst MoviePreview = ({ playMovie, data }) => {\n  const { Year, Rated, Genre, Awards, Poster, Title, Plot } = data;\n\n  const [inspect, toggleInspect] = useState(false);\n  const subTitle = [Year, Rated, Genre, Awards];\n  const handleClick = () => toggleInspect(!inspect);\n\n  const props = useSpring({ size: 1, from: { size: 3 } });\n\n  const Background = animated(ImageFilter);\n\n  return (\n    <Card\n      style={{\n        height: \"100%\",\n        color: \"white\",\n        position: \"relative\",\n        overflow: \"hidden\"\n      }}\n      maxWidth=\"20vw\"\n      onClick={handleClick}\n      className=\"animated fadeIn\"\n    >\n      <Background\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          zIndex: \"-1\",\n          transform: `scale(${props.size})`\n        }}\n        preserveAspectRatio=\"cover\"\n        image={Poster}\n        filter={\"duotone\"}\n        colorOne={[0, 0, 0]}\n        colorTwo={[255, 255, 255]}\n      />\n      <Heading fontSize={[5]} py=\"3em\">\n        {Title}\n      </Heading>\n      {inspect && (\n        <Card>\n          <Text backgroundColor=\"black\" fontSize={[1]}>\n            {Plot}\n          </Text>\n          {subTitle.map((e, i) => (\n            <Text key={i} fontSize=\".3em\">\n              {e}\n            </Text>\n          ))}\n        </Card>\n      )}\n    </Card>\n  );\n};\n\nconst Slider = ({ togglePlayer, categories }) => {\n  const handleClick = () => togglePlayer(true);\n\n  const {\n    loading,\n    error,\n    data: { getMovies: data }\n  } = useQuery(queryMovies);\n\n  !loading && console.log(data, error);\n\n  return (\n    <Box bg=\"#fd0101\" my=\"5em\" p=\".5em\" style={{ height: \"40vh\" }} width=\"100%\">\n      <Heading>{categories}</Heading>\n      {!loading &&\n        data.map(e => (\n          <MoviePreview key={e.Title} data={e} playMovie={handleClick} />\n        ))}\n    </Box>\n  );\n};\n\nexport default function Movies() {\n  const [upload, toggleUpload] = useState(false);\n  const [player, togglePlayer] = useState(false);\n  // const {loading,error,data}  = useQuery(queryCategories)\n\n  const data = [{ categories: \"dfs\" }];\n\n  return (\n    <div>\n      {data.map(({ categories }) => {\n        return (\n          <Slider\n            key={categories}\n            togglePlayer={togglePlayer}\n            name={categories}\n          />\n        );\n      })}\n      <Button\n        bg=\"#000000\"\n        color=\"#22ce99\"\n        onClick={() => toggleUpload(!upload)}\n        style={{ position: \"absolute\", bottom: \"0\" }}\n      >\n        {\" \"}\n        Contribute\n      </Button>\n      {player && <VideoPlayer />}\n      {upload && <Upload toggle={toggleUpload} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}