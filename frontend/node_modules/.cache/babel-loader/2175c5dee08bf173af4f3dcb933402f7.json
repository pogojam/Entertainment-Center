{"ast":null,"code":"import _slicedToArray from \"/Users/ryanbreaux/Test/videoup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryanbreaux/Test/videoup/src/upload.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Button } from \"rebass\";\nimport io from \"socket.io-client\";\n\nconst uploadEvent = data => {\n  const fReader = new FileReader();\n  console.log(data); // fReader.readAsArrayBuffer(data)\n\n  const socket = io(\"http://localhost:5000\");\n\n  fReader.onload = event => {\n    socket.emit(\"Start\", {\n      Name: data.name,\n      Data: event.target.result\n    });\n  };\n\n  socket.emit(\"Start\", {\n    Name: data.name,\n    Size: data.size\n  });\n};\n\nconst Upload = params => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        fileData = _useState2[0],\n        setFile = _useState2[1];\n\n  useEffect(() => {}, []);\n  console.log(fileData);\n  return React.createElement(Flex, {\n    style: {\n      height: \"100vh\"\n    },\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, fileData && fileData.name, React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"video/*\",\n    onChange: e => console.log(e.target),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), fileData && React.createElement(Button, {\n    onClick: () => uploadEvent(fileData),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Upload \"));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/Users/ryanbreaux/Test/videoup/src/upload.js"],"names":["React","useState","useEffect","Flex","Button","io","uploadEvent","data","fReader","FileReader","console","log","socket","onload","event","emit","Name","name","Data","target","result","Size","size","Upload","params","fileData","setFile","height","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAC1B,QAAMC,OAAO,GAAG,IAAIC,UAAJ,EAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAF0B,CAG1B;;AAEA,QAAMK,MAAM,GAAGP,EAAE,CAAC,uBAAD,CAAjB;;AAEAG,EAAAA,OAAO,CAACK,MAAR,GAAiBC,KAAK,IAAI;AACxBF,IAAAA,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqB;AAAEC,MAAAA,IAAI,EAAET,IAAI,CAACU,IAAb;AAAmBC,MAAAA,IAAI,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAAtC,KAArB;AACD,GAFD;;AAIAR,EAAAA,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqB;AAAEC,IAAAA,IAAI,EAAET,IAAI,CAACU,IAAb;AAAmBI,IAAAA,IAAI,EAAEd,IAAI,CAACe;AAA9B,GAArB;AACD,CAZD;;AAcA,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAAA,oBACKvB,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,QAChBwB,QADgB;AAAA,QACNC,OADM;;AAGvBxB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,cAAc,EAAC,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,QAAQ,IAAIA,QAAQ,CAACR,IALxB,EAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,QAAQ,EAAEW,CAAC,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,CAAC,CAACT,MAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWGM,QAAQ,IACP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMnB,WAAW,CAACmB,QAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,CADF;AAiBD,CAtBD;;AAwBA,eAAeF,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Button } from \"rebass\";\nimport io from \"socket.io-client\";\n\nconst uploadEvent = data => {\n  const fReader = new FileReader();\n  console.log(data);\n  // fReader.readAsArrayBuffer(data)\n\n  const socket = io(\"http://localhost:5000\");\n\n  fReader.onload = event => {\n    socket.emit(\"Start\", { Name: data.name, Data: event.target.result });\n  };\n\n  socket.emit(\"Start\", { Name: data.name, Size: data.size });\n};\n\nconst Upload = params => {\n  const [fileData, setFile] = useState(null);\n\n  useEffect(() => {}, []);\n  console.log(fileData);\n  return (\n    <Flex\n      style={{ height: \"100vh\" }}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {fileData && fileData.name}\n      <input\n        type=\"file\"\n        accept=\"video/*\"\n        onChange={e => console.log(e.target)}\n      />\n      {fileData && (\n        <Button onClick={() => uploadEvent(fileData)}> Upload </Button>\n      )}\n    </Flex>\n  );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}