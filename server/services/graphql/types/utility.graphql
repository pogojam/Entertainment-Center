scalar Date

type Mutation {
  newService(input: serviceInput): Service
  removeService(input: serviceInput): Service
  changeBill(token: String, input: billInput): Bill
}

type Query {
  getServices(token: String): [Service]
  getBills(token: String, service: String): [Bill]
}

input serviceInput {
  token: String
  name: String
  cycle: Int
  startDate: Date
}

input billInput {
  id: ID
  paidUsers: [ID]
  dueDate: Date
  pastDue: Boolean
  billPayed: Boolean
  service: String
  amount: Int
  token: String
}

type Service {
  name: String
  cycle: Int
  startDate: Date
}

type Bill {
  id: ID
  paidUsers: [ID]
  dueDate: Date
  pastDue: Boolean
  billPayed: Boolean
  service: String
  amount: Float
}
