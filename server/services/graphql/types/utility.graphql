scalar Date

type Mutation {
  newService(input: serviceInput): Service
  removeService(input: serviceInput): Service
  changeBill(input: billInput): Bill
}

type Query {
  getServices: [Service]
  getBills(service: String): [Bill]
}

input serviceInput {
  name: String
  cycle: Int
  startDate: Date
}

input billInput {
  id: ID
  paidUsers: [ID]
  dueDate: Date
  pastDue: Boolean
  billPayed: Boolean
  bill: String
  amount: Int!
}

type Service {
  name: String
  cycle: Int
  startDate: Date
}

type Bill {
  id: ID
  paidUsers: [ID]
  dueDate: Date
  pastDue: Boolean
  billPayed: Boolean
  service: String
  amount: Float
}
